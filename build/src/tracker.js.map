{"version":3,"sources":["../../src/tracker.js"],"names":["Tracker","constructor","clock","Date","now","_clock","timeline","stageStarted","idx","inputs","stageTracker","stageIdx","startTime","push","stageCompleted","result","length","assert","strictEqual","endTime","output","stageFailed","error","dummy"],"mappings":";;;;;;;;;AAAA;;;;;;AAEe,MAAMA,OAAN,CAAc;AAC3BC,EAAAA,WAAW,CAAE;AAAEC,IAAAA,KAAK,GAAG,MAAMC,IAAI,CAACC,GAAL;AAAhB,MAA+B,EAAjC,EAAqC;AAC9C,SAAKC,MAAL,GAAcH,KAAd;AACA,SAAKI,QAAL,GAAgB,EAAhB;AACD;;AAEDC,EAAAA,YAAY,CAAEC,GAAF,EAAOC,MAAP,EAAe;AACzB,UAAMC,YAAY,GAAG;AACnBC,MAAAA,QAAQ,EAAEH,GADS;AAEnBC,MAAAA,MAFmB;AAGnBG,MAAAA,SAAS,EAAE,KAAKP,MAAL;AAHQ,KAArB;AAKA,SAAKC,QAAL,CAAcO,IAAd,CAAmBH,YAAnB;AACD;;AAEDI,EAAAA,cAAc,CAAEN,GAAF,EAAOO,MAAP,EAAe;AAC3B,UAAML,YAAY,GAAG,KAAKJ,QAAL,CAAc,KAAKA,QAAL,CAAcU,MAAd,GAAuB,CAArC,CAArB;;AACAC,oBAAOC,WAAP,CAAmBR,YAAY,CAACC,QAAhC,EAA0CH,GAA1C;;AACAE,IAAAA,YAAY,CAACS,OAAb,GAAuB,KAAKd,MAAL,EAAvB;AACAK,IAAAA,YAAY,CAACU,MAAb,GAAsBL,MAAtB;AACD;;AAEDM,EAAAA,WAAW,CAAEb,GAAF,EAAOc,KAAP,EAAc;AACvB,UAAMZ,YAAY,GAAG,KAAKJ,QAAL,CAAc,KAAKA,QAAL,CAAcU,MAAd,GAAuB,CAArC,CAArB;;AACAC,oBAAOC,WAAP,CAAmBR,YAAY,CAACC,QAAhC,EAA0CH,GAA1C;;AACAE,IAAAA,YAAY,CAACS,OAAb,GAAuB,KAAKd,MAAL,EAAvB;AACAK,IAAAA,YAAY,CAACY,KAAb,GAAqBA,KAArB;AACD;;AA3B0B;;;AA8B7BtB,OAAO,CAACuB,KAAR,GAAgB;AACdhB,EAAAA,YAAY,GAAG,CAAE,CADH;;AAEdO,EAAAA,cAAc,GAAG,CAAE,CAFL;;AAGdO,EAAAA,WAAW,GAAG,CAAE;;AAHF,CAAhB","sourcesContent":["import assert from 'assert';\n\nexport default class Tracker {\n  constructor ({ clock = () => Date.now() } = {}) {\n    this._clock = clock\n    this.timeline = []\n  }\n\n  stageStarted (idx, inputs) {\n    const stageTracker = {\n      stageIdx: idx,\n      inputs,\n      startTime: this._clock()\n    }\n    this.timeline.push(stageTracker);\n  }\n\n  stageCompleted (idx, result) {\n    const stageTracker = this.timeline[this.timeline.length - 1]\n    assert.strictEqual(stageTracker.stageIdx, idx)\n    stageTracker.endTime = this._clock()\n    stageTracker.output = result\n  }\n\n  stageFailed (idx, error) {\n    const stageTracker = this.timeline[this.timeline.length - 1]\n    assert.strictEqual(stageTracker.stageIdx, idx)\n    stageTracker.endTime = this._clock()\n    stageTracker.error = error\n  }\n}\n\nTracker.dummy = {\n  stageStarted() {},\n  stageCompleted() {},\n  stageFailed() {}\n}\n"],"file":"tracker.js"}